name: Build CTB (Windows)

on:
  workflow_dispatch:   # 手动触发
  push:
    tags:
      - 'v*'           # push tag 自动触发

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      # 1. Checkout 代码
      - name: Checkout source
        uses: actions/checkout@v4

      # 2. Setup vcpkg（使用 Manifest 模式自动安装依赖）
      - name: Checkout vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git vcpkg
          cd vcpkg
          git checkout 8f54ef5453e7e76ff01e15988bf243e7247c5eb5

      - name: Install dependencies via vcpkg manifest
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ github.workspace }}/vcpkg
          vcpkgArguments: install

      # 3. Configure CMake
      - name: Configure CMake (Generate)
        shell: pwsh
        run: |
          cmake -S . -B build -G "Ninja" `
            -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake" `
            -DVCPKG_MANIFEST_MODE=ON `
            -DCMAKE_BUILD_TYPE=Release

      # 4. Build CTB
      - name: Build (CMake)
        shell: pwsh
        run: |
          cmake --build build --config Release

      # 5. 收集 exe + DLL
      - name: Collect exe + dependent DLLs
        shell: pwsh
        run: |
          New-Item -Path out -ItemType Directory -Force | Out-Null
          Get-ChildItem -Path build -Filter *.exe -Recurse -ErrorAction SilentlyContinue | Copy-Item -Destination out -Force
          $vcpkgBin = "${{ github.workspace }}\vcpkg\installed\x64-windows\bin"
          if (Test-Path $vcpkgBin) { Copy-Item -Path "$vcpkgBin\*.dll" -Destination out -ErrorAction SilentlyContinue }

      # 6. 上传 artifact（供下载）
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ctb-windows-exes
          path: out
          retention-days: 7

      # 7. 可选：自动创建 Release（触发 tag 时）
      - name: Create GitHub Release & attach assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: out/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
